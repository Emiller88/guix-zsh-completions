#compdef guix

typeset -A opt_args

_arguments -C \
  '1:cmd:->cmds' \
  '2:generators:->generator_lists' \
  '*:: :->args' \
&& ret=0

case "$state" in
  (cmds)
    local commands; commands=(
      'archive:Padrinos generators'
      'build:Build the given PACKAGE-OR-DERIVATION and return their output paths'
      'challenge:Challenge the substitutes for PACKAGE'
      'container:Build and manipulate Linux containers'
      'copy:Copy ITEMS to or from the specified host over SSH'
      'deploy:Perform the deployment specified by FILE'
      'describe:Display information about the channels currently in use'
      'download:Download the file at URL to the stor or to the given file, and print its file name and the hash of its contents'
      'edit:Start $VISUAL or $EDITOR to edit the definitions of PACKAGE'
      'environment:Build an environment that includes the dependencies of PACKAGE and execute COMMAND or an interactive shell in that environment'
      'gc:Invoke the garbage collector'
      'graph:Emit a representation of the dependency graph of PACKAGE'
      'hash:Return the cryptographic hash of FILE'
      'import:Run IMPORTER with ARGS'
      'install:Install the given PACKAGES'
      'lint:Run a set of checkers on the specified package; if none is specified, run the checkers on all packages'
      'pack:Create a bundle of PACKAGE'
      'package:Install, remove, or upgrade packages in a single transaction'
      'processes:List the current Guix sessions and their processes'
      'publish:Publish /gnu/store over HTTP'
      'pull:Download and deploy the latest version of Guix'
      'refresh:Update package definitions to match the latest upstream version'
      'remove:Remove the given PACKAGES'
      'repl:Start a Guile REPL in the Guix execution environment'
      'search:Search for packages matching REGEXPS'
      'show:Show details about PACKAGE'
      'size:Report the size of PACKAGE and its dependencies'
      'system:Build the operating system declared in FILE according to ACTION.'
      'time-machine:Execute COMMAND ARGS... in an older version of Guix'
      'upgrade:Upgrade packages that match REGEXP'
      'weather:Report the availability of substitutes'
    )

      _describe -t commands 'command' commands && ret=0
  ;;
  (generator_lists)
    local generators; generators=(
      'blank:'
    )
    _describe -t generators 'generator' generators && ret=0
  ;;
esac

return 1
